
/*
	Comprehensive Stylesheet Redesign 3.0:
	- Dark theme by default with a beautiful, structured layout.
	- Implemented collapsible sections and a fixed, scrollable file tree.
	- Added the extension logo and new name.
	- Ensured all functionalities from main.js are preserved.
*/

:root {
	--font-family: var(--vscode-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif);
	--radius: 3px;
	--spacing-xs: 4px;
	--spacing-sm: 8px;
	--spacing-md: 12px;
	--spacing-lg: 16px;
	--bg-color: #1a1a1a;
	--panel-bg: var(--vscode-sideBar-background, #252526);
	--panel-border: var(--vscode-panel-border, #333333);
	--text-color: var(--vscode-foreground, #cccccc);
	--text-muted: var(--vscode-descriptionForeground, #888888);
	--accent-color: var(--vscode-button-background, #0e639c);
}

/* Accessibility helpers */
.sr-only {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	padding: 0 !important;
	margin: -1px !important;
	overflow: hidden !important;
	clip: rect(0 0 0 0) !important;
	white-space: nowrap !important;
	border: 0 !important;
}

/* Inline SVG sprite: visually hide but keep available for <use> references */
svg[data-sprite] {
	position: absolute;
	width: 0;
	height: 0;
	overflow: hidden;
	clip: rect(0 0 0 0);
}

* {
		box-sizing: border-box;
}

body {
	background-color: var(--bg-color);
	color: var(--text-color);
	font-family: var(--font-family);
	font-size: var(--vscode-font-size);
	padding: var(--spacing-md);
	height: 100vh;
	margin: 0;
	display: flex;
	flex-direction: column;
}

.container {
	display: flex;
	flex-direction: column;
	gap: var(--spacing-md);
	flex-grow: 1;
	overflow: hidden;
}

/* --- Header --- */
.main-header {
	display: flex;
	align-items: center;
	gap: var(--spacing-md);
	flex-shrink: 0;
	padding-bottom: var(--spacing-sm);
	border-bottom: 1px solid var(--panel-border);
}

.logo {
		width: 28px;
		height: 28px;
}

#workspace-info {
		flex-grow: 1;
}

#workspace-info h1 {
	font-size: 1.2em;
	font-weight: 600;
	margin: 0;
	line-height: 1;
}

#workspace-slug {
	font-size: 0.85em;
	color: var(--text-muted);
	margin-top: 4px;
}

.header-actions {
	display: flex;
	gap: var(--spacing-xs);
}

.header-actions button {
	background: transparent;
	border: none;
	color: var(--vscode-icon-foreground, #cccccc);
	padding: var(--spacing-xs);
	border-radius: var(--radius);
	cursor: pointer;
	display: flex;
	transition: background-color 0.1s ease;
}

.header-actions button:hover {
	background-color: var(--vscode-toolbar-hoverBackground, #3a3d41);
}

.icon {
	width: 16px;
	height: 16px;
}

/* --- Action Bar --- */
.action-bar {
	display: flex;
	gap: var(--spacing-sm);
	flex-shrink: 0;
}

button {
	font-family: var(--font-family);
	font-size: var(--vscode-font-size);
	padding: var(--spacing-sm) var(--spacing-md);
	border-radius: var(--radius);
	border: 1px solid var(--vscode-button-border, transparent);
	cursor: pointer;
	display: inline-flex;
	align-items: center;
	gap: var(--spacing-sm);
	transition: background-color 0.1s ease;
}

button.primary {
	background-color: var(--accent-color);
	color: var(--vscode-button-foreground, #ffffff);
	flex-grow: 1;
	justify-content: center;
	font-weight: 600;
}

button.primary:hover {
	background-color: var(--vscode-button-hoverBackground, #1177bb);
}

button.secondary {
	background-color: var(--vscode-button-secondaryBackground, #3a3d41);
	color: var(--vscode-button-secondaryForeground, #ffffff);
}

button.secondary:hover {
	background-color: var(--vscode-button-secondaryHoverBackground, #4a4d51);
}

/* --- Collapsible Sections --- */
.collapsible-section {
		background-color: var(--panel-bg);
		border: 1px solid var(--panel-border);
		border-radius: var(--radius);
		flex-shrink: 0;
}
.collapsible-section[open] .section-header {
		border-bottom: 1px solid var(--panel-border);
}
.collapsible-section[open] .chevron {
		/* open: rotate to point down */
		transform: rotate(90deg);
		/* ensure the rotation anchor is stable across browsers and for inline SVGs */
		-webkit-transform-origin: center center;
		transform-origin: center center;
		-webkit-transform-box: fill-box;
		transform-box: fill-box;
}

.section-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: var(--spacing-sm) var(--spacing-md);
		cursor: pointer;
		-webkit-user-select: none;
		user-select: none;
		list-style: none; /* for summary */
}
.section-header::-webkit-details-marker {
		display: none; /* for summary */
}
.section-header:hover {
		background-color: var(--vscode-list-hoverBackground, #383838);
}

.section-header h3 {
		margin: 0;
		font-size: 0.9em;
		font-weight: 600;
		text-transform: uppercase;
		letter-spacing: 0.5px;
		color: var(--vscode-sideBar-sectionHeaderForeground, #cccccc);
}

.section-header .chevron {
		transition: transform 0.2s ease-in-out;
		/* closed: chevron points right (0deg); open rotates to 90deg */
		transform: rotate(0deg);
		/* ensure the chevron rotates around its center; some browsers require explicit origin */
		display: inline-block; /* ensure transform-origin applies predictably */
		-webkit-transform-origin: center center;
		transform-origin: center center;
		-webkit-transform-box: fill-box;
		transform-box: fill-box;
		will-change: transform;
}

/* Ensure the summary contains the heading as first child for screen readers */
details.collapsible-section > summary { display: block; }
details.collapsible-section > summary > h3 { display: inline-block; }

.section-body {
		padding: var(--spacing-md);
		display: flex;
		flex-direction: column;
		gap: var(--spacing-md);
}

.collapsible-section:not([open]) > *:not(summary) {
		display: none;
}

/* --- Status & Progress --- */
.chip-row {
	display: flex;
	flex-wrap: wrap;
	gap: var(--spacing-sm);
}

.status-chip {
	display: inline-flex;
	align-items: center;
	gap: var(--spacing-sm);
	padding: 2px 8px;
	border-radius: 16px;
	background-color: var(--vscode-badge-background, #4d4d4d);
	color: var(--vscode-badge-foreground, #ffffff);
	font-size: 11px;
}
.status-chip.over-limit {
	background-color: var(--vscode-errorForeground, #f48771);
}

.progress-wrapper {
	display: flex;
	align-items: center;
	gap: var(--spacing-sm);
}
#progress-container {
	flex-grow: 1;
	height: 4px;
	background-color: var(--vscode-input-background);
	border-radius: 2px;
	overflow: hidden;
}
#progress-bar {
	height: 100%;
	width: 0%;
	background-color: var(--vscode-progressBar-background, #0e70c0);
	transition: width 260ms linear;
}
#progress-container.indeterminate #progress-bar {
		width: 40%;
		animation: indeterminate 1.4s linear infinite;
}
@keyframes indeterminate {
		0% { transform: translateX(-100%); }
		100% { transform: translateX(300%); }
}
.progress-stats {
	font-size: 11px;
	color: var(--text-muted);
}

/* --- File Toolbar & List --- */
.file-section {
		flex-grow: 1;
		display: flex;
		flex-direction: column;
		overflow: hidden;
}
.file-section .section-body {
		flex-grow: 1;
		overflow: hidden;
}

#toolbar {
		flex-shrink: 0;
}
.segmented {
	display: flex;
	width: 100%;
}
.segmented button {
	flex-grow: 1;
	border: 1px solid var(--vscode-button-border, var(--vscode-contrastBorder, #444444));
	background-color: var(--vscode-button-secondaryBackground, #3a3d41);
	color: var(--vscode-button-secondaryForeground, #ffffff);
	padding: 6px;
	border-radius: 0;
	font-size: 12px;
}
.segmented button:hover {
		background-color: var(--vscode-button-secondaryHoverBackground, #4a4d51);
}
.segmented button:first-child {
	border-top-left-radius: var(--radius);
	border-bottom-left-radius: var(--radius);
}
.segmented button:last-child {
	border-top-right-radius: var(--radius);
	border-bottom-right-radius: var(--radius);
	border-right-width: 1px;
}
.segmented button + button {
		border-left-width: 0;
}

#file-list-container {
		/* Allow the file list to flexibly fill available space instead of a fixed height.
		   Use a sensible min and max to avoid layout collapse or runaway growth. */
		flex: 1 1 auto;
		overflow-y: auto;
		background-color: var(--vscode-input-background, #3c3c3c);
		border: 1px solid var(--vscode-input-border, #444444);
		border-radius: var(--radius);
		min-height: 120px;
		max-height: 60vh;
}

#file-list {
		padding: var(--spacing-sm);
}

.file-row-message {
	text-align: center;
	color: var(--text-muted);
	padding: var(--spacing-lg);
}

.file-tree-ul {
	list-style-type: none;
	padding-left: var(--spacing-lg);
}

.file-tree-li { padding: 2px 0; }

.file-tree-label {
	display: flex;
	align-items: center;
	cursor: pointer;
	padding: var(--spacing-xs);
	border-radius: var(--radius);
	transition: background-color 0.1s ease;
}
.file-tree-label:hover {
		background-color: var(--vscode-list-hoverBackground, #383838);
}

.file-checkbox {
	margin-right: var(--spacing-sm);
}

.file-tree-icon {
	width: 16px;
	height: 16px;
	margin-right: 6px;
	background-size: contain;
	background-repeat: no-repeat;
	background-position: center;
	opacity: 0.7;
}

/* Icons are preserved for JS functionality */
.folder-item > .file-tree-label > .file-tree-icon { background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23cccccc'%3E%3Cpath d='M1.5 2h4.381l1.5 1.5H14.5a.5.5 0 0 1 .5.5v8a.5.5 0 0 1-.5-.5H1.5a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5z'/%3E%3C/svg%3E"); }
.folder-item.expanded > .file-tree-label > .file-tree-icon { background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23cccccc'%3E%3Cpath d='M.5 14a.5.5 0 0 0 .5.5h14a.5.5 0 0 0 .5-.5V5.5a.5.5 0 0 0-.5-.5h-6.381l-1.5-1.5H1.5a.5.5 0 0 0-.5.5V14z'/%3E%3C/svg%3E"); }
.file-item > .file-tree-label > .file-tree-icon { background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23cccccc'%3E%3Cpath d='M3.5 2a.5.5 0 0 0-.5.5v11a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V5.621a.5.5 0 0 0-.146-.354l-3.121-3.121A.5.5 0 0 0 9.379 2H3.5z'/%3E%3C/svg%3E"); }

.folder-item > ul { display: none; }
.folder-item.expanded > ul { display: block; }

/* --- Modals & Settings --- */
.modal-wrapper {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		display: flex;
		align-items: center;
		justify-content: center;
		z-index: 100;
}
/* Treat aria-hidden the same as [hidden] so authors toggling aria-hidden alone
   do not accidentally leave an overlay that intercepts clicks or focus. */
.modal-wrapper[hidden],
.modal-wrapper[aria-hidden="true"] {
	/* Author styles can override the UA [hidden] rule; ensure hidden actually hides the modal.
	   Use display:none so the modal doesn't block pointer events or focus when hidden. */
	display: none !important;
	visibility: hidden !important;
	pointer-events: none !important;
}

/* Also ensure overlay inside an aria-hidden modal cannot capture pointer events */
.modal-wrapper[aria-hidden="true"] .modal-overlay {
	pointer-events: none !important;
}
.modal-overlay {
		position: absolute;
		width: 100%;
		height: 100%;
		background-color: rgba(0,0,0,0.5);
}
.modal-content {
		background-color: var(--vscode-editorWidget-background, #252526);
		border: 1px solid var(--vscode-editorWidget-border, #454545);
		padding: var(--spacing-lg);
		border-radius: var(--radius);
		box-shadow: 0 5px 15px rgba(0,0,0,0.3);
		z-index: 101;
		min-width: 300px;
		max-width: 90%;
		position: relative; /* allow absolute close button */
		display: flex;
		flex-direction: column;
		gap: var(--spacing-md);
		max-height: 80vh; /* constrain tall content */
		overflow: auto; /* enable scrolling within modal */
}

.modal-content h3 {
		margin: 0 0 var(--spacing-sm) 0;
		font-size: 1.1em;
		font-weight: 600;
		border-bottom: 1px solid var(--panel-border);
		padding-bottom: var(--spacing-sm);
}

#settingsForm {
		display: flex;
		flex-direction: column;
		gap: var(--spacing-lg);
}

#settingsForm label, .checkbox-label, fieldset legend {
		font-size: 13px;
		color: var(--text-muted);
		display: block;
		margin-bottom: var(--spacing-xs);
}

.checkbox-label {
		display: flex;
		align-items: center;
		gap: var(--spacing-sm);
}

input[type="text"], input[type="number"], select, textarea {
		width: 100%;
		padding: var(--spacing-sm);
		border-radius: var(--radius);
		border: 1px solid var(--vscode-input-border, #3c3c3c);
		background-color: var(--vscode-input-background, #3c3c3c);
		color: var(--vscode-input-foreground, #cccccc);
		box-sizing: border-box;
}

input:focus, select:focus, textarea:focus {
		outline: 1px solid var(--vscode-focusBorder, #007fd4);
		border-color: var(--vscode-focusBorder, #007fd4);
}

fieldset {
		border: 1px solid var(--panel-border);
		border-radius: var(--radius);
		padding: var(--spacing-md);
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: var(--spacing-sm);
}

.limit-group .limit-row {
		display: grid;
		grid-template-columns: 1fr auto;
		align-items: center;
		gap: var(--spacing-sm);
}
.limit-group input[type="number"] {
		width: 80px;
}
.limit-group input[type="range"] {
	 width: 100%;
	 grid-column: 1 / -1;
}

.modal-actions {
		display: flex;
		justify-content: flex-end;
		gap: var(--spacing-sm);
		margin-top: var(--spacing-md);
		border-top: 1px solid var(--panel-border);
		padding-top: var(--spacing-md);
}

/* Close button in top-right of modal */
.modal-close {
	position: absolute;
	top: 8px;
	right: 8px;
	background: transparent;
	border: none;
	color: var(--vscode-icon-foreground, #cccccc);
	width: 32px;
	height: 32px;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	border-radius: 4px;
	cursor: pointer;
}
.modal-close:hover {
	background-color: rgba(255,255,255,0.04);
}
.modal-close .icon { width: 18px; height: 18px; }

/* --- Toasts --- */
#toast-root {
	position: fixed;
	bottom: var(--spacing-lg);
	right: var(--spacing-lg);
	z-index: 1000;
	display: flex;
	flex-direction: column;
	gap: var(--spacing-sm);
}

.toast {
	background-color: var(--vscode-notifications-background, #333333);
	color: var(--vscode-notifications-foreground, #cccccc);
	padding: var(--spacing-md);
	border-radius: var(--radius);
	border: 1px solid var(--vscode-notifications-border, #444444);
	box-shadow: 0 4px 8px rgba(0,0,0,0.2);
	min-width: 250px;
	opacity: 1;
	transform: translateY(0);
	transition: opacity 0.3s ease, transform 0.3s ease;
}

/* Spinner */
.spinner{
		width: 18px;
		height: 18px;
		border-radius: 50%;
		border: 2px solid var(--text-muted);
		border-top-color: var(--accent-color);
		animation: spin 900ms linear infinite;
		display:inline-block;
}
@keyframes spin {
		to { transform: rotate(360deg); }
}

#ingest-preview {
		background-color: var(--vscode-editor-background, #1e1e1e);
		border: 1px solid var(--panel-border);
		border-radius: var(--radius);
		padding: var(--spacing-sm);
		min-height: 50px;
		display: flex;
		align-items: center;
		justify-content: center;
}

/* When the preview area is loading, visually dim the content and show a subtle overlay.
   This complements the spinner and improves perceived responsiveness for keyboard/screenreader users. */
#ingest-preview.loading {
	opacity: 0.6;
	position: relative;
	pointer-events: none; /* avoid accidental interaction while loading */
}
#ingest-preview.loading::after {
	content: '';
	position: absolute;
	left: 0; right: 0; top: 0; bottom: 0;
	background: linear-gradient(rgba(0,0,0,0.0), rgba(0,0,0,0.06));
	border-radius: var(--radius);
	pointer-events: none;
}

#ingest-preview-text {
		font-family: var(--vscode-editor-font-family);
		font-size: 12px;
		white-space: pre-wrap;
		word-break: break-all;
		color: var(--text-muted);
}

